-- VHDL netlist generated by SCUBA Diamond (64-bit) 3.12.1.454
-- Module  Version: 4.9
--C:\lscc\diamond\3.12\ispfpga\bin\nt64\scuba.exe -w -n MULT -lang vhdl -synth synplify -bus_exp 7 -bb -arch xo2c00 -type dspmult -simple_portname -pfu_mult -widtha 8 -widthb 8 -widthp 16 -PL_stages 1 -clk0 -ce0 -rst0 

-- Fri Jul 15 12:47:01 2022

library IEEE;
use IEEE.std_logic_1164.all;
-- synopsys translate_off
library MACHXO2;
use MACHXO2.components.all;
-- synopsys translate_on

entity MULT is
    port (
        Clock: in  std_logic; 
        ClkEn: in  std_logic; 
        Aclr: in  std_logic; 
        DataA: in  std_logic_vector(7 downto 0); 
        DataB: in  std_logic_vector(7 downto 0); 
        Result: out  std_logic_vector(15 downto 0));
end MULT;

architecture Structure of MULT is

    -- internal signal declarations
    signal scuba_vhi: std_logic;
    signal f_MULT_0_pp_0_0: std_logic;
    signal MULT_0_pp_0_0: std_logic;
    signal f_MULT_0_pp_0_1: std_logic;
    signal f_s_MULT_0_0_2: std_logic;
    signal f_s_MULT_0_0_3: std_logic;
    signal MULT_0_pp_2_4: std_logic;
    signal s_MULT_0_0_2: std_logic;
    signal MULT_0_pp_1_2: std_logic;
    signal s_MULT_0_0_3: std_logic;
    signal s_MULT_0_0_4: std_logic;
    signal co_MULT_0_0_1: std_logic;
    signal s_MULT_0_0_5: std_logic;
    signal s_MULT_0_0_6: std_logic;
    signal co_MULT_0_0_2: std_logic;
    signal s_MULT_0_0_7: std_logic;
    signal s_MULT_0_0_8: std_logic;
    signal co_MULT_0_0_3: std_logic;
    signal s_MULT_0_0_9: std_logic;
    signal s_MULT_0_0_10: std_logic;
    signal co_MULT_0_0_4: std_logic;
    signal MULT_0_pp_0_9: std_logic;
    signal s_MULT_0_0_11: std_logic;
    signal s_MULT_0_0_12: std_logic;
    signal co_MULT_0_0_5: std_logic;
    signal MULT_0_pp_1_11: std_logic;
    signal s_MULT_0_0_13: std_logic;
    signal co_MULT_0_0_6: std_logic;
    signal s_MULT_0_1_6: std_logic;
    signal MULT_0_pp_3_6: std_logic;
    signal s_MULT_0_1_7: std_logic;
    signal s_MULT_0_1_8: std_logic;
    signal co_MULT_0_1_1: std_logic;
    signal s_MULT_0_1_9: std_logic;
    signal s_MULT_0_1_10: std_logic;
    signal co_MULT_0_1_2: std_logic;
    signal s_MULT_0_1_11: std_logic;
    signal s_MULT_0_1_12: std_logic;
    signal co_MULT_0_1_3: std_logic;
    signal s_MULT_0_1_13: std_logic;
    signal s_MULT_0_1_14: std_logic;
    signal co_MULT_0_1_4: std_logic;
    signal MULT_0_pp_2_13: std_logic;
    signal s_MULT_0_1_15: std_logic;
    signal co_MULT_0_1_6: std_logic;
    signal co_MULT_0_1_5: std_logic;
    signal MULT_0_pp_3_15: std_logic;
    signal f_MULT_0_pp_2_4: std_logic;
    signal f_s_MULT_0_0_4: std_logic;
    signal co_t_MULT_0_2_1: std_logic;
    signal f_MULT_0_pp_2_5: std_logic;
    signal f_s_MULT_0_1_6: std_logic;
    signal f_s_MULT_0_0_5: std_logic;
    signal f_s_MULT_0_0_6: std_logic;
    signal co_t_MULT_0_2_2: std_logic;
    signal f_s_MULT_0_1_7: std_logic;
    signal f_s_MULT_0_1_8: std_logic;
    signal f_s_MULT_0_0_7: std_logic;
    signal f_s_MULT_0_0_8: std_logic;
    signal co_t_MULT_0_2_3: std_logic;
    signal f_s_MULT_0_1_9: std_logic;
    signal f_s_MULT_0_1_10: std_logic;
    signal f_s_MULT_0_0_9: std_logic;
    signal f_s_MULT_0_0_10: std_logic;
    signal co_t_MULT_0_2_4: std_logic;
    signal f_s_MULT_0_1_11: std_logic;
    signal f_s_MULT_0_1_12: std_logic;
    signal f_s_MULT_0_0_11: std_logic;
    signal f_s_MULT_0_0_12: std_logic;
    signal co_t_MULT_0_2_5: std_logic;
    signal f_s_MULT_0_1_13: std_logic;
    signal f_s_MULT_0_1_14: std_logic;
    signal f_s_MULT_0_0_13: std_logic;
    signal co_t_MULT_0_2_7: std_logic;
    signal co_t_MULT_0_2_6: std_logic;
    signal f_s_MULT_0_1_15: std_logic;
    signal MULT_0_pp_0_2: std_logic;
    signal MULT_0_pp_0_1: std_logic;
    signal MULT_0_cin_lr_0: std_logic;
    signal MULT_0_pp_0_4: std_logic;
    signal MULT_0_pp_0_3: std_logic;
    signal mco: std_logic;
    signal MULT_0_pp_0_6: std_logic;
    signal MULT_0_pp_0_5: std_logic;
    signal mco_1: std_logic;
    signal mfco: std_logic;
    signal MULT_0_pp_0_8: std_logic;
    signal MULT_0_pp_0_7: std_logic;
    signal mco_2: std_logic;
    signal MULT_0_pp_1_4: std_logic;
    signal MULT_0_pp_1_3: std_logic;
    signal MULT_0_cin_lr_2: std_logic;
    signal MULT_0_pp_1_6: std_logic;
    signal MULT_0_pp_1_5: std_logic;
    signal mco_3: std_logic;
    signal MULT_0_pp_1_8: std_logic;
    signal MULT_0_pp_1_7: std_logic;
    signal mco_4: std_logic;
    signal mfco_1: std_logic;
    signal MULT_0_pp_1_10: std_logic;
    signal MULT_0_pp_1_9: std_logic;
    signal mco_5: std_logic;
    signal MULT_0_pp_2_6: std_logic;
    signal MULT_0_pp_2_5: std_logic;
    signal MULT_0_cin_lr_4: std_logic;
    signal MULT_0_pp_2_8: std_logic;
    signal MULT_0_pp_2_7: std_logic;
    signal mco_6: std_logic;
    signal MULT_0_pp_2_10: std_logic;
    signal MULT_0_pp_2_9: std_logic;
    signal mco_7: std_logic;
    signal mfco_2: std_logic;
    signal MULT_0_pp_2_12: std_logic;
    signal MULT_0_pp_2_11: std_logic;
    signal mco_8: std_logic;
    signal MULT_0_pp_3_8: std_logic;
    signal MULT_0_pp_3_7: std_logic;
    signal MULT_0_cin_lr_6: std_logic;
    signal MULT_0_pp_3_10: std_logic;
    signal MULT_0_pp_3_9: std_logic;
    signal mco_9: std_logic;
    signal MULT_0_pp_3_12: std_logic;
    signal MULT_0_pp_3_11: std_logic;
    signal mco_10: std_logic;
    signal mfco_3: std_logic;
    signal MULT_0_pp_3_14: std_logic;
    signal MULT_0_pp_3_13: std_logic;
    signal mco_11: std_logic;
    signal scuba_vlo: std_logic;

    -- local component declarations
    component AND2
        port (A: in  std_logic; B: in  std_logic; Z: out  std_logic);
    end component;
    component FADD2B
        port (A0: in  std_logic; A1: in  std_logic; B0: in  std_logic; 
            B1: in  std_logic; CI: in  std_logic; COUT: out  std_logic; 
            S0: out  std_logic; S1: out  std_logic);
    end component;
    component FD1P3DX
        port (D: in  std_logic; SP: in  std_logic; CK: in  std_logic; 
            CD: in  std_logic; Q: out  std_logic);
    end component;
    component VHI
        port (Z: out  std_logic);
    end component;
    component VLO
        port (Z: out  std_logic);
    end component;
    component MULT2
        port (A0: in  std_logic; A1: in  std_logic; A2: in  std_logic; 
            A3: in  std_logic; B0: in  std_logic; B1: in  std_logic; 
            B2: in  std_logic; B3: in  std_logic; CI: in  std_logic; 
            P0: out  std_logic; P1: out  std_logic; CO: out  std_logic);
    end component;
    attribute GSR : string; 
    attribute GSR of FF_25 : label is "ENABLED";
    attribute GSR of FF_24 : label is "ENABLED";
    attribute GSR of FF_23 : label is "ENABLED";
    attribute GSR of FF_22 : label is "ENABLED";
    attribute GSR of FF_21 : label is "ENABLED";
    attribute GSR of FF_20 : label is "ENABLED";
    attribute GSR of FF_19 : label is "ENABLED";
    attribute GSR of FF_18 : label is "ENABLED";
    attribute GSR of FF_17 : label is "ENABLED";
    attribute GSR of FF_16 : label is "ENABLED";
    attribute GSR of FF_15 : label is "ENABLED";
    attribute GSR of FF_14 : label is "ENABLED";
    attribute GSR of FF_13 : label is "ENABLED";
    attribute GSR of FF_12 : label is "ENABLED";
    attribute GSR of FF_11 : label is "ENABLED";
    attribute GSR of FF_10 : label is "ENABLED";
    attribute GSR of FF_9 : label is "ENABLED";
    attribute GSR of FF_8 : label is "ENABLED";
    attribute GSR of FF_7 : label is "ENABLED";
    attribute GSR of FF_6 : label is "ENABLED";
    attribute GSR of FF_5 : label is "ENABLED";
    attribute GSR of FF_4 : label is "ENABLED";
    attribute GSR of FF_3 : label is "ENABLED";
    attribute GSR of FF_2 : label is "ENABLED";
    attribute GSR of FF_1 : label is "ENABLED";
    attribute GSR of FF_0 : label is "ENABLED";
    attribute syn_keep : boolean;
    attribute NGD_DRC_MASK : integer;
    attribute NGD_DRC_MASK of Structure : architecture is 1;

begin
    -- component instantiation statements
    scuba_vhi_inst: VHI
        port map (Z=>scuba_vhi);

    AND2_t3: AND2
        port map (A=>DataA(0), B=>DataB(0), Z=>MULT_0_pp_0_0);

    AND2_t2: AND2
        port map (A=>DataA(0), B=>DataB(2), Z=>MULT_0_pp_1_2);

    AND2_t1: AND2
        port map (A=>DataA(0), B=>DataB(4), Z=>MULT_0_pp_2_4);

    AND2_t0: AND2
        port map (A=>DataA(0), B=>DataB(6), Z=>MULT_0_pp_3_6);

    FF_25: FD1P3DX
        port map (D=>MULT_0_pp_0_0, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_MULT_0_pp_0_0);

    FF_24: FD1P3DX
        port map (D=>MULT_0_pp_0_1, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_MULT_0_pp_0_1);

    FF_23: FD1P3DX
        port map (D=>s_MULT_0_0_2, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_0_2);

    FF_22: FD1P3DX
        port map (D=>s_MULT_0_0_3, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_0_3);

    FF_21: FD1P3DX
        port map (D=>s_MULT_0_0_4, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_0_4);

    FF_20: FD1P3DX
        port map (D=>s_MULT_0_0_5, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_0_5);

    FF_19: FD1P3DX
        port map (D=>s_MULT_0_0_6, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_0_6);

    FF_18: FD1P3DX
        port map (D=>s_MULT_0_0_7, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_0_7);

    FF_17: FD1P3DX
        port map (D=>s_MULT_0_0_8, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_0_8);

    FF_16: FD1P3DX
        port map (D=>s_MULT_0_0_9, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_0_9);

    FF_15: FD1P3DX
        port map (D=>s_MULT_0_0_10, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_0_10);

    FF_14: FD1P3DX
        port map (D=>s_MULT_0_0_11, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_0_11);

    FF_13: FD1P3DX
        port map (D=>s_MULT_0_0_12, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_0_12);

    FF_12: FD1P3DX
        port map (D=>s_MULT_0_0_13, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_0_13);

    FF_11: FD1P3DX
        port map (D=>MULT_0_pp_2_4, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_MULT_0_pp_2_4);

    FF_10: FD1P3DX
        port map (D=>MULT_0_pp_2_5, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_MULT_0_pp_2_5);

    FF_9: FD1P3DX
        port map (D=>s_MULT_0_1_6, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_1_6);

    FF_8: FD1P3DX
        port map (D=>s_MULT_0_1_7, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_1_7);

    FF_7: FD1P3DX
        port map (D=>s_MULT_0_1_8, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_1_8);

    FF_6: FD1P3DX
        port map (D=>s_MULT_0_1_9, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_1_9);

    FF_5: FD1P3DX
        port map (D=>s_MULT_0_1_10, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_1_10);

    FF_4: FD1P3DX
        port map (D=>s_MULT_0_1_11, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_1_11);

    FF_3: FD1P3DX
        port map (D=>s_MULT_0_1_12, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_1_12);

    FF_2: FD1P3DX
        port map (D=>s_MULT_0_1_13, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_1_13);

    FF_1: FD1P3DX
        port map (D=>s_MULT_0_1_14, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_1_14);

    FF_0: FD1P3DX
        port map (D=>s_MULT_0_1_15, SP=>ClkEn, CK=>Clock, CD=>Aclr, 
            Q=>f_s_MULT_0_1_15);

    MULT_0_cin_lr_add_0: FADD2B
        port map (A0=>scuba_vlo, A1=>scuba_vlo, B0=>scuba_vlo, 
            B1=>scuba_vlo, CI=>scuba_vlo, COUT=>MULT_0_cin_lr_0, 
            S0=>open, S1=>open);

    MULT_0_Cadd_0_4: FADD2B
        port map (A0=>scuba_vlo, A1=>scuba_vlo, B0=>scuba_vlo, 
            B1=>scuba_vlo, CI=>mfco, COUT=>open, S0=>MULT_0_pp_0_9, 
            S1=>open);

    MULT_0_cin_lr_add_2: FADD2B
        port map (A0=>scuba_vlo, A1=>scuba_vlo, B0=>scuba_vlo, 
            B1=>scuba_vlo, CI=>scuba_vlo, COUT=>MULT_0_cin_lr_2, 
            S0=>open, S1=>open);

    MULT_0_Cadd_2_4: FADD2B
        port map (A0=>scuba_vlo, A1=>scuba_vlo, B0=>scuba_vlo, 
            B1=>scuba_vlo, CI=>mfco_1, COUT=>open, S0=>MULT_0_pp_1_11, 
            S1=>open);

    MULT_0_cin_lr_add_4: FADD2B
        port map (A0=>scuba_vlo, A1=>scuba_vlo, B0=>scuba_vlo, 
            B1=>scuba_vlo, CI=>scuba_vlo, COUT=>MULT_0_cin_lr_4, 
            S0=>open, S1=>open);

    MULT_0_Cadd_4_4: FADD2B
        port map (A0=>scuba_vlo, A1=>scuba_vlo, B0=>scuba_vlo, 
            B1=>scuba_vlo, CI=>mfco_2, COUT=>open, S0=>MULT_0_pp_2_13, 
            S1=>open);

    MULT_0_cin_lr_add_6: FADD2B
        port map (A0=>scuba_vlo, A1=>scuba_vlo, B0=>scuba_vlo, 
            B1=>scuba_vlo, CI=>scuba_vlo, COUT=>MULT_0_cin_lr_6, 
            S0=>open, S1=>open);

    MULT_0_Cadd_6_4: FADD2B
        port map (A0=>scuba_vlo, A1=>scuba_vlo, B0=>scuba_vlo, 
            B1=>scuba_vlo, CI=>mfco_3, COUT=>open, S0=>MULT_0_pp_3_15, 
            S1=>open);

    Cadd_MULT_0_0_1: FADD2B
        port map (A0=>scuba_vlo, A1=>MULT_0_pp_0_2, B0=>scuba_vlo, 
            B1=>MULT_0_pp_1_2, CI=>scuba_vlo, COUT=>co_MULT_0_0_1, 
            S0=>open, S1=>s_MULT_0_0_2);

    MULT_0_add_0_2: FADD2B
        port map (A0=>MULT_0_pp_0_3, A1=>MULT_0_pp_0_4, 
            B0=>MULT_0_pp_1_3, B1=>MULT_0_pp_1_4, CI=>co_MULT_0_0_1, 
            COUT=>co_MULT_0_0_2, S0=>s_MULT_0_0_3, S1=>s_MULT_0_0_4);

    MULT_0_add_0_3: FADD2B
        port map (A0=>MULT_0_pp_0_5, A1=>MULT_0_pp_0_6, 
            B0=>MULT_0_pp_1_5, B1=>MULT_0_pp_1_6, CI=>co_MULT_0_0_2, 
            COUT=>co_MULT_0_0_3, S0=>s_MULT_0_0_5, S1=>s_MULT_0_0_6);

    MULT_0_add_0_4: FADD2B
        port map (A0=>MULT_0_pp_0_7, A1=>MULT_0_pp_0_8, 
            B0=>MULT_0_pp_1_7, B1=>MULT_0_pp_1_8, CI=>co_MULT_0_0_3, 
            COUT=>co_MULT_0_0_4, S0=>s_MULT_0_0_7, S1=>s_MULT_0_0_8);

    MULT_0_add_0_5: FADD2B
        port map (A0=>MULT_0_pp_0_9, A1=>scuba_vlo, B0=>MULT_0_pp_1_9, 
            B1=>MULT_0_pp_1_10, CI=>co_MULT_0_0_4, COUT=>co_MULT_0_0_5, 
            S0=>s_MULT_0_0_9, S1=>s_MULT_0_0_10);

    MULT_0_add_0_6: FADD2B
        port map (A0=>scuba_vlo, A1=>scuba_vlo, B0=>MULT_0_pp_1_11, 
            B1=>scuba_vlo, CI=>co_MULT_0_0_5, COUT=>co_MULT_0_0_6, 
            S0=>s_MULT_0_0_11, S1=>s_MULT_0_0_12);

    Cadd_MULT_0_0_7: FADD2B
        port map (A0=>scuba_vlo, A1=>scuba_vlo, B0=>scuba_vlo, 
            B1=>scuba_vlo, CI=>co_MULT_0_0_6, COUT=>open, 
            S0=>s_MULT_0_0_13, S1=>open);

    Cadd_MULT_0_1_1: FADD2B
        port map (A0=>scuba_vlo, A1=>MULT_0_pp_2_6, B0=>scuba_vlo, 
            B1=>MULT_0_pp_3_6, CI=>scuba_vlo, COUT=>co_MULT_0_1_1, 
            S0=>open, S1=>s_MULT_0_1_6);

    MULT_0_add_1_2: FADD2B
        port map (A0=>MULT_0_pp_2_7, A1=>MULT_0_pp_2_8, 
            B0=>MULT_0_pp_3_7, B1=>MULT_0_pp_3_8, CI=>co_MULT_0_1_1, 
            COUT=>co_MULT_0_1_2, S0=>s_MULT_0_1_7, S1=>s_MULT_0_1_8);

    MULT_0_add_1_3: FADD2B
        port map (A0=>MULT_0_pp_2_9, A1=>MULT_0_pp_2_10, 
            B0=>MULT_0_pp_3_9, B1=>MULT_0_pp_3_10, CI=>co_MULT_0_1_2, 
            COUT=>co_MULT_0_1_3, S0=>s_MULT_0_1_9, S1=>s_MULT_0_1_10);

    MULT_0_add_1_4: FADD2B
        port map (A0=>MULT_0_pp_2_11, A1=>MULT_0_pp_2_12, 
            B0=>MULT_0_pp_3_11, B1=>MULT_0_pp_3_12, CI=>co_MULT_0_1_3, 
            COUT=>co_MULT_0_1_4, S0=>s_MULT_0_1_11, S1=>s_MULT_0_1_12);

    MULT_0_add_1_5: FADD2B
        port map (A0=>MULT_0_pp_2_13, A1=>scuba_vlo, B0=>MULT_0_pp_3_13, 
            B1=>MULT_0_pp_3_14, CI=>co_MULT_0_1_4, COUT=>co_MULT_0_1_5, 
            S0=>s_MULT_0_1_13, S1=>s_MULT_0_1_14);

    MULT_0_add_1_6: FADD2B
        port map (A0=>scuba_vlo, A1=>scuba_vlo, B0=>MULT_0_pp_3_15, 
            B1=>scuba_vlo, CI=>co_MULT_0_1_5, COUT=>co_MULT_0_1_6, 
            S0=>s_MULT_0_1_15, S1=>open);

    Cadd_t_MULT_0_2_1: FADD2B
        port map (A0=>scuba_vlo, A1=>f_s_MULT_0_0_4, B0=>scuba_vlo, 
            B1=>f_MULT_0_pp_2_4, CI=>scuba_vlo, COUT=>co_t_MULT_0_2_1, 
            S0=>open, S1=>Result(4));

    t_MULT_0_add_2_2: FADD2B
        port map (A0=>f_s_MULT_0_0_5, A1=>f_s_MULT_0_0_6, 
            B0=>f_MULT_0_pp_2_5, B1=>f_s_MULT_0_1_6, CI=>co_t_MULT_0_2_1, 
            COUT=>co_t_MULT_0_2_2, S0=>Result(5), S1=>Result(6));

    t_MULT_0_add_2_3: FADD2B
        port map (A0=>f_s_MULT_0_0_7, A1=>f_s_MULT_0_0_8, 
            B0=>f_s_MULT_0_1_7, B1=>f_s_MULT_0_1_8, CI=>co_t_MULT_0_2_2, 
            COUT=>co_t_MULT_0_2_3, S0=>Result(7), S1=>Result(8));

    t_MULT_0_add_2_4: FADD2B
        port map (A0=>f_s_MULT_0_0_9, A1=>f_s_MULT_0_0_10, 
            B0=>f_s_MULT_0_1_9, B1=>f_s_MULT_0_1_10, CI=>co_t_MULT_0_2_3, 
            COUT=>co_t_MULT_0_2_4, S0=>Result(9), S1=>Result(10));

    t_MULT_0_add_2_5: FADD2B
        port map (A0=>f_s_MULT_0_0_11, A1=>f_s_MULT_0_0_12, 
            B0=>f_s_MULT_0_1_11, B1=>f_s_MULT_0_1_12, 
            CI=>co_t_MULT_0_2_4, COUT=>co_t_MULT_0_2_5, S0=>Result(11), 
            S1=>Result(12));

    t_MULT_0_add_2_6: FADD2B
        port map (A0=>f_s_MULT_0_0_13, A1=>scuba_vlo, 
            B0=>f_s_MULT_0_1_13, B1=>f_s_MULT_0_1_14, 
            CI=>co_t_MULT_0_2_5, COUT=>co_t_MULT_0_2_6, S0=>Result(13), 
            S1=>Result(14));

    t_MULT_0_add_2_7: FADD2B
        port map (A0=>scuba_vlo, A1=>scuba_vlo, B0=>f_s_MULT_0_1_15, 
            B1=>scuba_vlo, CI=>co_t_MULT_0_2_6, COUT=>co_t_MULT_0_2_7, 
            S0=>Result(15), S1=>open);

    MULT_0_mult_0_0: MULT2
        port map (A0=>DataA(0), A1=>DataA(1), A2=>DataA(1), A3=>DataA(2), 
            B0=>DataB(1), B1=>DataB(0), B2=>DataB(1), B3=>DataB(0), 
            CI=>MULT_0_cin_lr_0, P0=>MULT_0_pp_0_1, P1=>MULT_0_pp_0_2, 
            CO=>mco);

    MULT_0_mult_0_1: MULT2
        port map (A0=>DataA(2), A1=>DataA(3), A2=>DataA(3), A3=>DataA(4), 
            B0=>DataB(1), B1=>DataB(0), B2=>DataB(1), B3=>DataB(0), 
            CI=>mco, P0=>MULT_0_pp_0_3, P1=>MULT_0_pp_0_4, CO=>mco_1);

    MULT_0_mult_0_2: MULT2
        port map (A0=>DataA(4), A1=>DataA(5), A2=>DataA(5), A3=>DataA(6), 
            B0=>DataB(1), B1=>DataB(0), B2=>DataB(1), B3=>DataB(0), 
            CI=>mco_1, P0=>MULT_0_pp_0_5, P1=>MULT_0_pp_0_6, CO=>mco_2);

    MULT_0_mult_0_3: MULT2
        port map (A0=>DataA(6), A1=>DataA(7), A2=>DataA(7), 
            A3=>scuba_vlo, B0=>DataB(1), B1=>DataB(0), B2=>DataB(1), 
            B3=>DataB(0), CI=>mco_2, P0=>MULT_0_pp_0_7, 
            P1=>MULT_0_pp_0_8, CO=>mfco);

    MULT_0_mult_2_0: MULT2
        port map (A0=>DataA(0), A1=>DataA(1), A2=>DataA(1), A3=>DataA(2), 
            B0=>DataB(3), B1=>DataB(2), B2=>DataB(3), B3=>DataB(2), 
            CI=>MULT_0_cin_lr_2, P0=>MULT_0_pp_1_3, P1=>MULT_0_pp_1_4, 
            CO=>mco_3);

    MULT_0_mult_2_1: MULT2
        port map (A0=>DataA(2), A1=>DataA(3), A2=>DataA(3), A3=>DataA(4), 
            B0=>DataB(3), B1=>DataB(2), B2=>DataB(3), B3=>DataB(2), 
            CI=>mco_3, P0=>MULT_0_pp_1_5, P1=>MULT_0_pp_1_6, CO=>mco_4);

    MULT_0_mult_2_2: MULT2
        port map (A0=>DataA(4), A1=>DataA(5), A2=>DataA(5), A3=>DataA(6), 
            B0=>DataB(3), B1=>DataB(2), B2=>DataB(3), B3=>DataB(2), 
            CI=>mco_4, P0=>MULT_0_pp_1_7, P1=>MULT_0_pp_1_8, CO=>mco_5);

    MULT_0_mult_2_3: MULT2
        port map (A0=>DataA(6), A1=>DataA(7), A2=>DataA(7), 
            A3=>scuba_vlo, B0=>DataB(3), B1=>DataB(2), B2=>DataB(3), 
            B3=>DataB(2), CI=>mco_5, P0=>MULT_0_pp_1_9, 
            P1=>MULT_0_pp_1_10, CO=>mfco_1);

    MULT_0_mult_4_0: MULT2
        port map (A0=>DataA(0), A1=>DataA(1), A2=>DataA(1), A3=>DataA(2), 
            B0=>DataB(5), B1=>DataB(4), B2=>DataB(5), B3=>DataB(4), 
            CI=>MULT_0_cin_lr_4, P0=>MULT_0_pp_2_5, P1=>MULT_0_pp_2_6, 
            CO=>mco_6);

    MULT_0_mult_4_1: MULT2
        port map (A0=>DataA(2), A1=>DataA(3), A2=>DataA(3), A3=>DataA(4), 
            B0=>DataB(5), B1=>DataB(4), B2=>DataB(5), B3=>DataB(4), 
            CI=>mco_6, P0=>MULT_0_pp_2_7, P1=>MULT_0_pp_2_8, CO=>mco_7);

    MULT_0_mult_4_2: MULT2
        port map (A0=>DataA(4), A1=>DataA(5), A2=>DataA(5), A3=>DataA(6), 
            B0=>DataB(5), B1=>DataB(4), B2=>DataB(5), B3=>DataB(4), 
            CI=>mco_7, P0=>MULT_0_pp_2_9, P1=>MULT_0_pp_2_10, CO=>mco_8);

    MULT_0_mult_4_3: MULT2
        port map (A0=>DataA(6), A1=>DataA(7), A2=>DataA(7), 
            A3=>scuba_vlo, B0=>DataB(5), B1=>DataB(4), B2=>DataB(5), 
            B3=>DataB(4), CI=>mco_8, P0=>MULT_0_pp_2_11, 
            P1=>MULT_0_pp_2_12, CO=>mfco_2);

    MULT_0_mult_6_0: MULT2
        port map (A0=>DataA(0), A1=>DataA(1), A2=>DataA(1), A3=>DataA(2), 
            B0=>DataB(7), B1=>DataB(6), B2=>DataB(7), B3=>DataB(6), 
            CI=>MULT_0_cin_lr_6, P0=>MULT_0_pp_3_7, P1=>MULT_0_pp_3_8, 
            CO=>mco_9);

    MULT_0_mult_6_1: MULT2
        port map (A0=>DataA(2), A1=>DataA(3), A2=>DataA(3), A3=>DataA(4), 
            B0=>DataB(7), B1=>DataB(6), B2=>DataB(7), B3=>DataB(6), 
            CI=>mco_9, P0=>MULT_0_pp_3_9, P1=>MULT_0_pp_3_10, CO=>mco_10);

    MULT_0_mult_6_2: MULT2
        port map (A0=>DataA(4), A1=>DataA(5), A2=>DataA(5), A3=>DataA(6), 
            B0=>DataB(7), B1=>DataB(6), B2=>DataB(7), B3=>DataB(6), 
            CI=>mco_10, P0=>MULT_0_pp_3_11, P1=>MULT_0_pp_3_12, 
            CO=>mco_11);

    scuba_vlo_inst: VLO
        port map (Z=>scuba_vlo);

    MULT_0_mult_6_3: MULT2
        port map (A0=>DataA(6), A1=>DataA(7), A2=>DataA(7), 
            A3=>scuba_vlo, B0=>DataB(7), B1=>DataB(6), B2=>DataB(7), 
            B3=>DataB(6), CI=>mco_11, P0=>MULT_0_pp_3_13, 
            P1=>MULT_0_pp_3_14, CO=>mfco_3);

    Result(0) <= f_MULT_0_pp_0_0;
    Result(1) <= f_MULT_0_pp_0_1;
    Result(2) <= f_s_MULT_0_0_2;
    Result(3) <= f_s_MULT_0_0_3;
end Structure;

-- synopsys translate_off
library MACHXO2;
configuration Structure_CON of MULT is
    for Structure
        for all:AND2 use entity MACHXO2.AND2(V); end for;
        for all:FADD2B use entity MACHXO2.FADD2B(V); end for;
        for all:FD1P3DX use entity MACHXO2.FD1P3DX(V); end for;
        for all:VHI use entity MACHXO2.VHI(V); end for;
        for all:VLO use entity MACHXO2.VLO(V); end for;
        for all:MULT2 use entity MACHXO2.MULT2(V); end for;
    end for;
end Structure_CON;

-- synopsys translate_on
